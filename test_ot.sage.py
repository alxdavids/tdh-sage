

# This file was *autogenerated* from the file test_ot.sage
from sage.all_cmdline import *   # import sage library

_sage_const_10 = Integer(10); _sage_const_7 = Integer(7); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_15 = Integer(15)
try:
  from sagelib.tdh import TrapdoorHashDDH, TrapdoorHashDDHRate1
  from sagelib.ot import BatchOT
  from sagelib.test_utils import create_p256_curve
except ImportError as e:
  sys.exit("Error loading preprocessed sage files. Try running `make clean pyfiles`. Full error: " + e)

def checkBatchOT(tdh):
  bOT = BatchOT(tdh)
  n = _sage_const_10 
  k = _sage_const_7 
  inp_send = [_sage_const_0 ]*n
  inp_send[_sage_const_2 ] = _sage_const_1 
  inp_rec = [_sage_const_0 ]*(n*k)
  inp_rec[_sage_const_15 ] = _sage_const_1 
  (st, msg1) = bOT.one(inp_send, k, n)
  msg2 = bOT.two(msg1, inp_rec, k, n)
  s = bOT.three(st, msg2, n)
  for j in range(_sage_const_0 , n):
    if j != _sage_const_2 :
      assert s[j] == _sage_const_0 
    else:
      assert s[j] == _sage_const_1 

def checkDDHOT():
  G, EC, p = create_p256_curve()
  tdh = TrapdoorHashDDH(EC, p, G)
  checkBatchOT(tdh)

def checkDDHRate1OT():
  G, EC, p = create_p256_curve()
  tdh = TrapdoorHashDDHRate1(EC, p, G, _sage_const_1 /_sage_const_2 **_sage_const_10 )
  checkBatchOT(tdh)

if __name__ == "__main__":
  checkDDHOT()
  checkDDHRate1OT()

